{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('clone'), require('d3-ease'), require('d3-hierarchy'), require('prop-types'), require('react')) : typeof define === 'function' && define.amd ? define(['clone', 'd3-ease', 'd3-hierarchy', 'prop-types', 'react'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.ReactTreeGraph = factory(global.clone, global.d3, global.d3, global.PropTypes, global.React));\n})(this, function (clone, d3Ease, d3Hierarchy, PropTypes, React) {\n  'use strict';\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  const regex = /on[A-Z]/;\n\n  function wrapper(func, args) {\n    return event => func(event, ...args);\n  } // Wraps any event handlers passed in as props with a function that passes additional arguments\n\n\n  function wrapHandlers(props, ...args) {\n    const handlers = Object.keys(props).filter(propName => regex.test(propName) && typeof props[propName] === 'function');\n    const wrappedHandlers = handlers.reduce((acc, handler) => {\n      acc[handler] = wrapper(props[handler], args);\n      return acc;\n    }, {});\n    return { ...props,\n      ...wrappedHandlers\n    };\n  }\n\n  const propTypes$4 = {\n    source: PropTypes.object.isRequired,\n    target: PropTypes.object.isRequired,\n    keyProp: PropTypes.string.isRequired,\n    x1: PropTypes.number.isRequired,\n    x2: PropTypes.number.isRequired,\n    y1: PropTypes.number.isRequired,\n    y2: PropTypes.number.isRequired,\n    pathFunc: PropTypes.func.isRequired,\n    pathProps: PropTypes.object.isRequired\n  };\n\n  function diagonal(x1, y1, x2, y2) {\n    return `M${y1},${x1}C${(y1 + y2) / 2},${x1} ${(y1 + y2) / 2},${x2} ${y2},${x2}`;\n  }\n\n  const defaultProps$1 = {\n    pathFunc: diagonal\n  };\n\n  class Link extends React.PureComponent {\n    render() {\n      const wrappedProps = wrapHandlers(this.props.pathProps, this.props.source.data[this.props.keyProp], this.props.target.data[this.props.keyProp]);\n      const d = this.props.pathFunc(this.props.x1, this.props.y1, this.props.x2, this.props.y2);\n      return /*#__PURE__*/React.createElement('path', _extends({}, wrappedProps, {\n        d: d\n      }));\n    }\n\n  }\n\n  Link.defaultProps = defaultProps$1;\n  Link.propTypes = propTypes$4;\n  const propTypes$3 = {\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    keyProp: PropTypes.string.isRequired,\n    labelProp: PropTypes.string.isRequired,\n    shape: PropTypes.string.isRequired,\n    nodeProps: PropTypes.object.isRequired,\n    gProps: PropTypes.object.isRequired,\n    textProps: PropTypes.object.isRequired\n  };\n\n  class Node extends React.PureComponent {\n    getTransform() {\n      return `translate(${this.props.y}, ${this.props.x})`;\n    }\n\n    render() {\n      let offset = 0;\n      let nodePropsWithDefaults = this.props.nodeProps;\n\n      switch (this.props.shape) {\n        case 'circle':\n          nodePropsWithDefaults = {\n            r: 5,\n            ...nodePropsWithDefaults\n          };\n          offset = nodePropsWithDefaults.r;\n          break;\n\n        case 'image':\n        case 'rect':\n          nodePropsWithDefaults = {\n            height: 10,\n            width: 10,\n            ...nodePropsWithDefaults\n          };\n          nodePropsWithDefaults = {\n            x: -nodePropsWithDefaults.width / 2,\n            y: -nodePropsWithDefaults.height / 2,\n            ...nodePropsWithDefaults\n          };\n          offset = nodePropsWithDefaults.width / 2;\n          break;\n      }\n\n      const wrappedNodeProps = wrapHandlers(nodePropsWithDefaults, this.props[this.props.keyProp]);\n      const wrappedGProps = wrapHandlers(this.props.gProps, this.props[this.props.keyProp]);\n      const wrappedTextProps = wrapHandlers(this.props.textProps, this.props[this.props.keyProp]);\n      return /*#__PURE__*/React.createElement('g', _extends({}, wrappedGProps, {\n        transform: this.getTransform()\n      }), /*#__PURE__*/React.createElement(this.props.shape, wrappedNodeProps), /*#__PURE__*/React.createElement('text', _extends({\n        dx: offset + 0.5,\n        dy: 5\n      }, wrappedTextProps), this.props[this.props.labelProp]));\n    }\n\n  }\n\n  Node.propTypes = propTypes$3;\n  const propTypes$2 = {\n    children: PropTypes.node,\n    height: PropTypes.number.isRequired,\n    keyProp: PropTypes.string.isRequired,\n    labelProp: PropTypes.string.isRequired,\n    links: PropTypes.array.isRequired,\n    nodes: PropTypes.array.isRequired,\n    nodeClassName: PropTypes.string,\n    nodeShape: PropTypes.string.isRequired,\n    nodeProps: PropTypes.object.isRequired,\n    pathFunc: PropTypes.func,\n    width: PropTypes.number.isRequired,\n    gProps: PropTypes.object.isRequired,\n    pathProps: PropTypes.object.isRequired,\n    svgProps: PropTypes.object.isRequired,\n    textProps: PropTypes.object.isRequired\n  };\n\n  class Container extends React.PureComponent {\n    render() {\n      return /*#__PURE__*/React.createElement('svg', _extends({}, this.props.svgProps, {\n        height: this.props.height,\n        width: this.props.width\n      }), this.props.children, /*#__PURE__*/React.createElement('g', null, this.props.links.map(link => /*#__PURE__*/React.createElement(Link, {\n        key: link.target.data[this.props.keyProp],\n        keyProp: this.props.keyProp,\n        pathFunc: this.props.pathFunc,\n        source: link.source,\n        target: link.target,\n        x1: link.source.x,\n        x2: link.target.x,\n        y1: link.source.y,\n        y2: link.target.y,\n        pathProps: { ...this.props.pathProps,\n          ...link.target.data.pathProps\n        }\n      })), this.props.nodes.map(node => /*#__PURE__*/React.createElement(Node, _extends({\n        key: node.data[this.props.keyProp],\n        keyProp: this.props.keyProp,\n        labelProp: this.props.labelProp,\n        shape: this.props.nodeShape,\n        x: node.x,\n        y: node.y,\n        nodeProps: { ...this.props.nodeProps,\n          ...node.data.nodeProps\n        },\n        gProps: { ...this.props.gProps,\n          ...node.data.gProps\n        },\n        textProps: { ...this.props.textProps,\n          ...node.data.textProps\n        }\n      }, node.data)))));\n    }\n\n  }\n\n  Container.propTypes = propTypes$2;\n  const propTypes$1 = {\n    animated: PropTypes.bool.isRequired,\n    getChildren: PropTypes.func.isRequired,\n    keyProp: PropTypes.string.isRequired,\n    links: PropTypes.array.isRequired,\n    nodes: PropTypes.array.isRequired,\n    duration: PropTypes.number.isRequired,\n    easing: PropTypes.func.isRequired,\n    steps: PropTypes.number.isRequired\n  };\n\n  class Animated extends React.PureComponent {\n    constructor(props) {\n      super(props);\n\n      if (props.animated) {\n        // If we are animating, we set the initial positions of the nodes and links to be the position of the root node\n        // and animate from there\n        let initialX = props.nodes[0].x;\n        let initialY = props.nodes[0].y;\n        this.state = {\n          nodes: props.nodes.map(n => ({ ...n,\n            x: initialX,\n            y: initialY\n          })),\n          links: props.links.map(l => ({\n            source: { ...l.source,\n              x: initialX,\n              y: initialY\n            },\n            target: { ...l.target,\n              x: initialX,\n              y: initialY\n            }\n          }))\n        };\n      } else {\n        this.state = {\n          nodes: props.nodes,\n          links: props.links\n        };\n      }\n    }\n\n    componentDidMount() {\n      if (this.props.animated) {\n        this.animate(this.props);\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.nodes === this.props.nodes && nextProps.links === this.props.links) {\n        return;\n      }\n\n      if (!nextProps.animated) {\n        this.setState({\n          nodes: nextProps.nodes,\n          links: nextProps.links\n        });\n        return;\n      }\n\n      this.animate(nextProps);\n    }\n\n    animate(props) {\n      // Stop previous animation if one is already in progress.  We will start the next animation\n      // from the position we are currently in\n      clearInterval(this.animation);\n      let counter = 0; // Do as much one-time calculation outside of the animation step, which needs to be fast\n\n      let animationContext = this.getAnimationContext(this.state, props);\n      this.animation = setInterval(() => {\n        counter++;\n\n        if (counter === props.steps) {\n          clearInterval(this.animation);\n          this.animation = null;\n          this.setState({\n            nodes: props.nodes,\n            links: props.links\n          });\n          return;\n        }\n\n        this.setState(this.calculateNewState(animationContext, counter / props.steps));\n      }, props.duration / props.steps);\n    }\n\n    getAnimationContext(initialState, newState) {\n      // Nodes/links that are in both states need to be moved from the old position to the new one\n      // Nodes/links only in the initial state are being removed, and should be moved to the position\n      // of the closest ancestor that still exists, or the new root\n      // Nodes/links only in the new state are being added, and should be moved from the position of\n      // the closest ancestor that previously existed, or the old root\n      // The base determines which node/link the data (like classes and labels) comes from for rendering\n      // We only run this once at the start of the animation, so optimization is less important\n      let addedNodes = newState.nodes.filter(n1 => initialState.nodes.every(n2 => !this.areNodesSame(n1, n2))).map(n1 => ({\n        base: n1,\n        old: this.getClosestAncestor(n1, newState, initialState),\n        new: n1\n      }));\n      let changedNodes = newState.nodes.filter(n1 => initialState.nodes.some(n2 => this.areNodesSame(n1, n2))).map(n1 => ({\n        base: n1,\n        old: initialState.nodes.find(n2 => this.areNodesSame(n1, n2)),\n        new: n1\n      }));\n      let removedNodes = initialState.nodes.filter(n1 => newState.nodes.every(n2 => !this.areNodesSame(n1, n2))).map(n1 => ({\n        base: n1,\n        old: n1,\n        new: this.getClosestAncestor(n1, initialState, newState)\n      }));\n      let addedLinks = newState.links.filter(l1 => initialState.links.every(l2 => !this.areLinksSame(l1, l2))).map(l1 => ({\n        base: l1,\n        old: this.getClosestAncestor(l1.target, newState, initialState),\n        new: l1\n      }));\n      let changedLinks = newState.links.filter(l1 => initialState.links.some(l2 => this.areLinksSame(l1, l2))).map(l1 => ({\n        base: l1,\n        old: initialState.links.find(l2 => this.areLinksSame(l1, l2)),\n        new: l1\n      }));\n      let removedLinks = initialState.links.filter(l1 => newState.links.every(l2 => !this.areLinksSame(l1, l2))).map(l1 => ({\n        base: l1,\n        old: l1,\n        new: this.getClosestAncestor(l1.target, initialState, newState)\n      }));\n      return {\n        nodes: changedNodes.concat(addedNodes).concat(removedNodes),\n        links: changedLinks.concat(addedLinks).concat(removedLinks)\n      };\n    }\n\n    getClosestAncestor(node, stateWithNode, stateWithoutNode) {\n      let oldParent = node;\n\n      while (oldParent) {\n        let newParent = stateWithoutNode.nodes.find(n => this.areNodesSame(oldParent, n));\n\n        if (newParent) {\n          return newParent;\n        }\n\n        oldParent = stateWithNode.nodes.find(n => (this.props.getChildren(n) || []).some(c => this.areNodesSame(oldParent, c)));\n      }\n\n      return stateWithoutNode.nodes[0];\n    }\n\n    areNodesSame(a, b) {\n      return a.data[this.props.keyProp] === b.data[this.props.keyProp];\n    }\n\n    areLinksSame(a, b) {\n      return a.source.data[this.props.keyProp] === b.source.data[this.props.keyProp] && a.target.data[this.props.keyProp] === b.target.data[this.props.keyProp];\n    }\n\n    calculateNewState(animationContext, interval) {\n      return {\n        nodes: animationContext.nodes.map(n => this.calculateNodePosition(n.base, n.old, n.new, interval)),\n        links: animationContext.links.map(l => this.calculateLinkPosition(l.base, l.old, l.new, interval))\n      };\n    }\n\n    calculateNodePosition(node, start, end, interval) {\n      return { ...node,\n        x: this.calculateNewValue(start.x, end.x, interval),\n        y: this.calculateNewValue(start.y, end.y, interval)\n      };\n    }\n\n    calculateLinkPosition(link, start, end, interval) {\n      return {\n        source: { ...link.source,\n          x: this.calculateNewValue(start.source ? start.source.x : start.x, end.source ? end.source.x : end.x, interval),\n          y: this.calculateNewValue(start.source ? start.source.y : start.y, end.source ? end.source.y : end.y, interval)\n        },\n        target: { ...link.target,\n          x: this.calculateNewValue(start.target ? start.target.x : start.x, end.target ? end.target.x : end.x, interval),\n          y: this.calculateNewValue(start.target ? start.target.y : start.y, end.target ? end.target.y : end.y, interval)\n        }\n      };\n    }\n\n    calculateNewValue(start, end, interval) {\n      return start + (end - start) * this.props.easing(interval);\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(Container, _extends({}, this.props, this.state));\n    }\n\n  }\n\n  Animated.propTypes = propTypes$1;\n  const propTypes = {\n    data: PropTypes.object.isRequired,\n    animated: PropTypes.bool.isRequired,\n    children: PropTypes.node,\n    duration: PropTypes.number.isRequired,\n    easing: PropTypes.func.isRequired,\n    steps: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    keyProp: PropTypes.string.isRequired,\n    labelProp: PropTypes.string.isRequired,\n    getChildren: PropTypes.func.isRequired,\n    margins: PropTypes.shape({\n      bottom: PropTypes.number.isRequired,\n      left: PropTypes.number.isRequired,\n      right: PropTypes.number.isRequired,\n      top: PropTypes.number.isRequired\n    }).isRequired,\n    pathFunc: PropTypes.func,\n    nodeShape: PropTypes.oneOf(['circle', 'image', 'polygon', 'rect']).isRequired,\n    nodeProps: PropTypes.object.isRequired,\n    gProps: PropTypes.object.isRequired,\n    pathProps: PropTypes.object.isRequired,\n    svgProps: PropTypes.object.isRequired,\n    textProps: PropTypes.object.isRequired\n  };\n  const defaultProps = {\n    animated: false,\n    duration: 500,\n    easing: d3Ease.easeQuadOut,\n    getChildren: n => n.children,\n    steps: 20,\n    keyProp: 'name',\n    labelProp: 'name',\n    margins: {\n      bottom: 10,\n      left: 20,\n      right: 150,\n      top: 10\n    },\n    nodeShape: 'circle',\n    nodeProps: {},\n    gProps: {},\n    pathProps: {},\n    svgProps: {},\n    textProps: {}\n  };\n\n  class Tree extends React.PureComponent {\n    render() {\n      const contentWidth = this.props.width - this.props.margins.left - this.props.margins.right;\n      const contentHeight = this.props.height - this.props.margins.top - this.props.margins.bottom; // data is cloned because d3 will mutate the object passed in\n\n      let data = d3Hierarchy.hierarchy(clone(this.props.data), this.props.getChildren);\n      let root = d3Hierarchy.tree().size([contentHeight, contentWidth])(data);\n      let nodes = root.descendants();\n      let links = root.links();\n      nodes.forEach(node => {\n        node.y += this.props.margins.top;\n      });\n      return /*#__PURE__*/React.createElement(Animated, {\n        animated: this.props.animated,\n        duration: this.props.duration,\n        easing: this.props.easing,\n        getChildren: this.props.getChildren,\n        height: this.props.height,\n        keyProp: this.props.keyProp,\n        labelProp: this.props.labelProp,\n        links: links,\n        nodes: nodes,\n        nodeShape: this.props.nodeShape,\n        nodeProps: this.props.nodeProps,\n        pathFunc: this.props.pathFunc,\n        steps: this.props.steps,\n        width: this.props.width,\n        gProps: {\n          className: 'node',\n          ...this.props.gProps\n        },\n        pathProps: {\n          className: 'link',\n          ...this.props.pathProps\n        },\n        svgProps: this.props.svgProps,\n        textProps: this.props.textProps\n      }, this.props.children);\n    }\n\n  }\n\n  Tree.propTypes = propTypes;\n  Tree.defaultProps = defaultProps;\n  return Tree;\n});","map":{"version":3,"sources":["/Users/trant2/Documents/GitHub/medication-tree/node_modules/react-tree-graph/dist/index.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","ReactTreeGraph","clone","d3","PropTypes","React","d3Ease","d3Hierarchy","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","regex","wrapper","func","args","event","wrapHandlers","props","handlers","keys","filter","propName","test","wrappedHandlers","reduce","acc","handler","propTypes$4","object","isRequired","keyProp","string","x1","number","x2","y1","y2","pathFunc","pathProps","diagonal","defaultProps$1","Link","PureComponent","render","wrappedProps","data","d","createElement","defaultProps","propTypes","propTypes$3","x","y","labelProp","shape","nodeProps","gProps","textProps","Node","getTransform","offset","nodePropsWithDefaults","r","height","width","wrappedNodeProps","wrappedGProps","wrappedTextProps","transform","dx","dy","propTypes$2","children","node","links","array","nodes","nodeClassName","nodeShape","svgProps","Container","map","link","propTypes$1","animated","bool","getChildren","duration","easing","steps","Animated","constructor","initialX","initialY","state","n","l","componentDidMount","animate","componentWillReceiveProps","nextProps","setState","clearInterval","animation","counter","animationContext","getAnimationContext","setInterval","calculateNewState","initialState","newState","addedNodes","n1","every","n2","areNodesSame","base","old","getClosestAncestor","new","changedNodes","some","find","removedNodes","addedLinks","l1","l2","areLinksSame","changedLinks","removedLinks","concat","stateWithNode","stateWithoutNode","oldParent","newParent","c","a","b","interval","calculateNodePosition","calculateLinkPosition","start","end","calculateNewValue","margins","bottom","left","right","top","oneOf","easeQuadOut","Tree","contentWidth","contentHeight","hierarchy","root","tree","size","descendants","forEach","className"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined'\n\t\t? (module.exports = factory(\n\t\t\t\trequire('clone'),\n\t\t\t\trequire('d3-ease'),\n\t\t\t\trequire('d3-hierarchy'),\n\t\t\t\trequire('prop-types'),\n\t\t\t\trequire('react')\n\t\t  ))\n\t\t: typeof define === 'function' && define.amd\n\t\t? define(\n\t\t\t\t['clone', 'd3-ease', 'd3-hierarchy', 'prop-types', 'react'],\n\t\t\t\tfactory\n\t\t  )\n\t\t: ((global =\n\t\t\t\ttypeof globalThis !== 'undefined' ? globalThis : global || self),\n\t\t  (global.ReactTreeGraph = factory(\n\t\t\t\tglobal.clone,\n\t\t\t\tglobal.d3,\n\t\t\t\tglobal.d3,\n\t\t\t\tglobal.PropTypes,\n\t\t\t\tglobal.React\n\t\t  )));\n})(this, function (clone, d3Ease, d3Hierarchy, PropTypes, React) {\n\t'use strict';\n\n\tfunction _extends() {\n\t\t_extends =\n\t\t\tObject.assign ||\n\t\t\tfunction (target) {\n\t\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\t\tvar source = arguments[i];\n\n\t\t\t\t\tfor (var key in source) {\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\t\t\t\t\ttarget[key] = source[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\t\t\t};\n\n\t\treturn _extends.apply(this, arguments);\n\t}\n\n\tconst regex = /on[A-Z]/;\n\n\tfunction wrapper(func, args) {\n\t\treturn (event) => func(event, ...args);\n\t} // Wraps any event handlers passed in as props with a function that passes additional arguments\n\n\tfunction wrapHandlers(props, ...args) {\n\t\tconst handlers = Object.keys(props).filter(\n\t\t\t(propName) =>\n\t\t\t\tregex.test(propName) && typeof props[propName] === 'function'\n\t\t);\n\t\tconst wrappedHandlers = handlers.reduce((acc, handler) => {\n\t\t\tacc[handler] = wrapper(props[handler], args);\n\t\t\treturn acc;\n\t\t}, {});\n\t\treturn { ...props, ...wrappedHandlers };\n\t}\n\n\tconst propTypes$4 = {\n\t\tsource: PropTypes.object.isRequired,\n\t\ttarget: PropTypes.object.isRequired,\n\t\tkeyProp: PropTypes.string.isRequired,\n\t\tx1: PropTypes.number.isRequired,\n\t\tx2: PropTypes.number.isRequired,\n\t\ty1: PropTypes.number.isRequired,\n\t\ty2: PropTypes.number.isRequired,\n\t\tpathFunc: PropTypes.func.isRequired,\n\t\tpathProps: PropTypes.object.isRequired,\n\t};\n\n\tfunction diagonal(x1, y1, x2, y2) {\n\t\treturn `M${y1},${x1}C${(y1 + y2) / 2},${x1} ${(y1 + y2) / 2},${x2} ${y2},${x2}`;\n\t}\n\n\tconst defaultProps$1 = {\n\t\tpathFunc: diagonal,\n\t};\n\tclass Link extends React.PureComponent {\n\t\trender() {\n\t\t\tconst wrappedProps = wrapHandlers(\n\t\t\t\tthis.props.pathProps,\n\t\t\t\tthis.props.source.data[this.props.keyProp],\n\t\t\t\tthis.props.target.data[this.props.keyProp]\n\t\t\t);\n\t\t\tconst d = this.props.pathFunc(\n\t\t\t\tthis.props.x1,\n\t\t\t\tthis.props.y1,\n\t\t\t\tthis.props.x2,\n\t\t\t\tthis.props.y2\n\t\t\t);\n\t\t\treturn /*#__PURE__*/ React.createElement(\n\t\t\t\t'path',\n\t\t\t\t_extends({}, wrappedProps, {\n\t\t\t\t\td: d,\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\tLink.defaultProps = defaultProps$1;\n\tLink.propTypes = propTypes$4;\n\n\tconst propTypes$3 = {\n\t\tx: PropTypes.number.isRequired,\n\t\ty: PropTypes.number.isRequired,\n\t\tkeyProp: PropTypes.string.isRequired,\n\t\tlabelProp: PropTypes.string.isRequired,\n\t\tshape: PropTypes.string.isRequired,\n\t\tnodeProps: PropTypes.object.isRequired,\n\t\tgProps: PropTypes.object.isRequired,\n\t\ttextProps: PropTypes.object.isRequired,\n\t};\n\tclass Node extends React.PureComponent {\n\t\tgetTransform() {\n\t\t\treturn `translate(${this.props.y}, ${this.props.x})`;\n\t\t}\n\n\t\trender() {\n\t\t\tlet offset = 0;\n\t\t\tlet nodePropsWithDefaults = this.props.nodeProps;\n\n\t\t\tswitch (this.props.shape) {\n\t\t\t\tcase 'circle':\n\t\t\t\t\tnodePropsWithDefaults = {\n\t\t\t\t\t\tr: 5,\n\t\t\t\t\t\t...nodePropsWithDefaults,\n\t\t\t\t\t};\n\t\t\t\t\toffset = nodePropsWithDefaults.r;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'image':\n\t\t\t\tcase 'rect':\n\t\t\t\t\tnodePropsWithDefaults = {\n\t\t\t\t\t\theight: 10,\n\t\t\t\t\t\twidth: 10,\n\t\t\t\t\t\t...nodePropsWithDefaults,\n\t\t\t\t\t};\n\t\t\t\t\tnodePropsWithDefaults = {\n\t\t\t\t\t\tx: -nodePropsWithDefaults.width / 2,\n\t\t\t\t\t\ty: -nodePropsWithDefaults.height / 2,\n\t\t\t\t\t\t...nodePropsWithDefaults,\n\t\t\t\t\t};\n\t\t\t\t\toffset = nodePropsWithDefaults.width / 2;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst wrappedNodeProps = wrapHandlers(\n\t\t\t\tnodePropsWithDefaults,\n\t\t\t\tthis.props[this.props.keyProp]\n\t\t\t);\n\t\t\tconst wrappedGProps = wrapHandlers(\n\t\t\t\tthis.props.gProps,\n\t\t\t\tthis.props[this.props.keyProp]\n\t\t\t);\n\t\t\tconst wrappedTextProps = wrapHandlers(\n\t\t\t\tthis.props.textProps,\n\t\t\t\tthis.props[this.props.keyProp]\n\t\t\t);\n\t\t\treturn /*#__PURE__*/ React.createElement(\n\t\t\t\t'g',\n\t\t\t\t_extends({}, wrappedGProps, {\n\t\t\t\t\ttransform: this.getTransform(),\n\t\t\t\t}),\n\t\t\t\t/*#__PURE__*/ React.createElement(this.props.shape, wrappedNodeProps),\n\t\t\t\t/*#__PURE__*/ React.createElement(\n\t\t\t\t\t'text',\n\t\t\t\t\t_extends(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdx: offset + 0.5,\n\t\t\t\t\t\t\tdy: 5,\n\t\t\t\t\t\t},\n\t\t\t\t\t\twrappedTextProps\n\t\t\t\t\t),\n\t\t\t\t\tthis.props[this.props.labelProp]\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\tNode.propTypes = propTypes$3;\n\n\tconst propTypes$2 = {\n\t\tchildren: PropTypes.node,\n\t\theight: PropTypes.number.isRequired,\n\t\tkeyProp: PropTypes.string.isRequired,\n\t\tlabelProp: PropTypes.string.isRequired,\n\t\tlinks: PropTypes.array.isRequired,\n\t\tnodes: PropTypes.array.isRequired,\n\t\tnodeClassName: PropTypes.string,\n\t\tnodeShape: PropTypes.string.isRequired,\n\t\tnodeProps: PropTypes.object.isRequired,\n\t\tpathFunc: PropTypes.func,\n\t\twidth: PropTypes.number.isRequired,\n\t\tgProps: PropTypes.object.isRequired,\n\t\tpathProps: PropTypes.object.isRequired,\n\t\tsvgProps: PropTypes.object.isRequired,\n\t\ttextProps: PropTypes.object.isRequired,\n\t};\n\tclass Container extends React.PureComponent {\n\t\trender() {\n\t\t\treturn /*#__PURE__*/ React.createElement(\n\t\t\t\t'svg',\n\t\t\t\t_extends({}, this.props.svgProps, {\n\t\t\t\t\theight: this.props.height,\n\t\t\t\t\twidth: this.props.width,\n\t\t\t\t}),\n\t\t\t\tthis.props.children,\n\t\t\t\t/*#__PURE__*/ React.createElement(\n\t\t\t\t\t'g',\n\t\t\t\t\tnull,\n\t\t\t\t\tthis.props.links.map((link) =>\n\t\t\t\t\t\t/*#__PURE__*/ React.createElement(Link, {\n\t\t\t\t\t\t\tkey: link.target.data[this.props.keyProp],\n\t\t\t\t\t\t\tkeyProp: this.props.keyProp,\n\t\t\t\t\t\t\tpathFunc: this.props.pathFunc,\n\t\t\t\t\t\t\tsource: link.source,\n\t\t\t\t\t\t\ttarget: link.target,\n\t\t\t\t\t\t\tx1: link.source.x,\n\t\t\t\t\t\t\tx2: link.target.x,\n\t\t\t\t\t\t\ty1: link.source.y,\n\t\t\t\t\t\t\ty2: link.target.y,\n\t\t\t\t\t\t\tpathProps: {\n\t\t\t\t\t\t\t\t...this.props.pathProps,\n\t\t\t\t\t\t\t\t...link.target.data.pathProps,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t})\n\t\t\t\t\t),\n\t\t\t\t\tthis.props.nodes.map((node) =>\n\t\t\t\t\t\t/*#__PURE__*/ React.createElement(\n\t\t\t\t\t\t\tNode,\n\t\t\t\t\t\t\t_extends(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: node.data[this.props.keyProp],\n\t\t\t\t\t\t\t\t\tkeyProp: this.props.keyProp,\n\t\t\t\t\t\t\t\t\tlabelProp: this.props.labelProp,\n\t\t\t\t\t\t\t\t\tshape: this.props.nodeShape,\n\t\t\t\t\t\t\t\t\tx: node.x,\n\t\t\t\t\t\t\t\t\ty: node.y,\n\t\t\t\t\t\t\t\t\tnodeProps: {\n\t\t\t\t\t\t\t\t\t\t...this.props.nodeProps,\n\t\t\t\t\t\t\t\t\t\t...node.data.nodeProps,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tgProps: { ...this.props.gProps, ...node.data.gProps },\n\t\t\t\t\t\t\t\t\ttextProps: {\n\t\t\t\t\t\t\t\t\t\t...this.props.textProps,\n\t\t\t\t\t\t\t\t\t\t...node.data.textProps,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnode.data\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\tContainer.propTypes = propTypes$2;\n\n\tconst propTypes$1 = {\n\t\tanimated: PropTypes.bool.isRequired,\n\t\tgetChildren: PropTypes.func.isRequired,\n\t\tkeyProp: PropTypes.string.isRequired,\n\t\tlinks: PropTypes.array.isRequired,\n\t\tnodes: PropTypes.array.isRequired,\n\t\tduration: PropTypes.number.isRequired,\n\t\teasing: PropTypes.func.isRequired,\n\t\tsteps: PropTypes.number.isRequired,\n\t};\n\tclass Animated extends React.PureComponent {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\n\t\t\tif (props.animated) {\n\t\t\t\t// If we are animating, we set the initial positions of the nodes and links to be the position of the root node\n\t\t\t\t// and animate from there\n\t\t\t\tlet initialX = props.nodes[0].x;\n\t\t\t\tlet initialY = props.nodes[0].y;\n\t\t\t\tthis.state = {\n\t\t\t\t\tnodes: props.nodes.map((n) => ({ ...n, x: initialX, y: initialY })),\n\t\t\t\t\tlinks: props.links.map((l) => ({\n\t\t\t\t\t\tsource: { ...l.source, x: initialX, y: initialY },\n\t\t\t\t\t\ttarget: { ...l.target, x: initialX, y: initialY },\n\t\t\t\t\t})),\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthis.state = {\n\t\t\t\t\tnodes: props.nodes,\n\t\t\t\t\tlinks: props.links,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tcomponentDidMount() {\n\t\t\tif (this.props.animated) {\n\t\t\t\tthis.animate(this.props);\n\t\t\t}\n\t\t}\n\n\t\tcomponentWillReceiveProps(nextProps) {\n\t\t\tif (\n\t\t\t\tnextProps.nodes === this.props.nodes &&\n\t\t\t\tnextProps.links === this.props.links\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!nextProps.animated) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tnodes: nextProps.nodes,\n\t\t\t\t\tlinks: nextProps.links,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.animate(nextProps);\n\t\t}\n\n\t\tanimate(props) {\n\t\t\t// Stop previous animation if one is already in progress.  We will start the next animation\n\t\t\t// from the position we are currently in\n\t\t\tclearInterval(this.animation);\n\t\t\tlet counter = 0; // Do as much one-time calculation outside of the animation step, which needs to be fast\n\n\t\t\tlet animationContext = this.getAnimationContext(this.state, props);\n\t\t\tthis.animation = setInterval(() => {\n\t\t\t\tcounter++;\n\n\t\t\t\tif (counter === props.steps) {\n\t\t\t\t\tclearInterval(this.animation);\n\t\t\t\t\tthis.animation = null;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tnodes: props.nodes,\n\t\t\t\t\t\tlinks: props.links,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.setState(\n\t\t\t\t\tthis.calculateNewState(animationContext, counter / props.steps)\n\t\t\t\t);\n\t\t\t}, props.duration / props.steps);\n\t\t}\n\n\t\tgetAnimationContext(initialState, newState) {\n\t\t\t// Nodes/links that are in both states need to be moved from the old position to the new one\n\t\t\t// Nodes/links only in the initial state are being removed, and should be moved to the position\n\t\t\t// of the closest ancestor that still exists, or the new root\n\t\t\t// Nodes/links only in the new state are being added, and should be moved from the position of\n\t\t\t// the closest ancestor that previously existed, or the old root\n\t\t\t// The base determines which node/link the data (like classes and labels) comes from for rendering\n\t\t\t// We only run this once at the start of the animation, so optimization is less important\n\t\t\tlet addedNodes = newState.nodes\n\t\t\t\t.filter((n1) =>\n\t\t\t\t\tinitialState.nodes.every((n2) => !this.areNodesSame(n1, n2))\n\t\t\t\t)\n\t\t\t\t.map((n1) => ({\n\t\t\t\t\tbase: n1,\n\t\t\t\t\told: this.getClosestAncestor(n1, newState, initialState),\n\t\t\t\t\tnew: n1,\n\t\t\t\t}));\n\t\t\tlet changedNodes = newState.nodes\n\t\t\t\t.filter((n1) =>\n\t\t\t\t\tinitialState.nodes.some((n2) => this.areNodesSame(n1, n2))\n\t\t\t\t)\n\t\t\t\t.map((n1) => ({\n\t\t\t\t\tbase: n1,\n\t\t\t\t\told: initialState.nodes.find((n2) => this.areNodesSame(n1, n2)),\n\t\t\t\t\tnew: n1,\n\t\t\t\t}));\n\t\t\tlet removedNodes = initialState.nodes\n\t\t\t\t.filter((n1) =>\n\t\t\t\t\tnewState.nodes.every((n2) => !this.areNodesSame(n1, n2))\n\t\t\t\t)\n\t\t\t\t.map((n1) => ({\n\t\t\t\t\tbase: n1,\n\t\t\t\t\told: n1,\n\t\t\t\t\tnew: this.getClosestAncestor(n1, initialState, newState),\n\t\t\t\t}));\n\t\t\tlet addedLinks = newState.links\n\t\t\t\t.filter((l1) =>\n\t\t\t\t\tinitialState.links.every((l2) => !this.areLinksSame(l1, l2))\n\t\t\t\t)\n\t\t\t\t.map((l1) => ({\n\t\t\t\t\tbase: l1,\n\t\t\t\t\told: this.getClosestAncestor(l1.target, newState, initialState),\n\t\t\t\t\tnew: l1,\n\t\t\t\t}));\n\t\t\tlet changedLinks = newState.links\n\t\t\t\t.filter((l1) =>\n\t\t\t\t\tinitialState.links.some((l2) => this.areLinksSame(l1, l2))\n\t\t\t\t)\n\t\t\t\t.map((l1) => ({\n\t\t\t\t\tbase: l1,\n\t\t\t\t\told: initialState.links.find((l2) => this.areLinksSame(l1, l2)),\n\t\t\t\t\tnew: l1,\n\t\t\t\t}));\n\t\t\tlet removedLinks = initialState.links\n\t\t\t\t.filter((l1) =>\n\t\t\t\t\tnewState.links.every((l2) => !this.areLinksSame(l1, l2))\n\t\t\t\t)\n\t\t\t\t.map((l1) => ({\n\t\t\t\t\tbase: l1,\n\t\t\t\t\told: l1,\n\t\t\t\t\tnew: this.getClosestAncestor(l1.target, initialState, newState),\n\t\t\t\t}));\n\t\t\treturn {\n\t\t\t\tnodes: changedNodes.concat(addedNodes).concat(removedNodes),\n\t\t\t\tlinks: changedLinks.concat(addedLinks).concat(removedLinks),\n\t\t\t};\n\t\t}\n\n\t\tgetClosestAncestor(node, stateWithNode, stateWithoutNode) {\n\t\t\tlet oldParent = node;\n\n\t\t\twhile (oldParent) {\n\t\t\t\tlet newParent = stateWithoutNode.nodes.find((n) =>\n\t\t\t\t\tthis.areNodesSame(oldParent, n)\n\t\t\t\t);\n\n\t\t\t\tif (newParent) {\n\t\t\t\t\treturn newParent;\n\t\t\t\t}\n\n\t\t\t\toldParent = stateWithNode.nodes.find((n) =>\n\t\t\t\t\t(this.props.getChildren(n) || []).some((c) =>\n\t\t\t\t\t\tthis.areNodesSame(oldParent, c)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn stateWithoutNode.nodes[0];\n\t\t}\n\n\t\tareNodesSame(a, b) {\n\t\t\treturn a.data[this.props.keyProp] === b.data[this.props.keyProp];\n\t\t}\n\n\t\tareLinksSame(a, b) {\n\t\t\treturn (\n\t\t\t\ta.source.data[this.props.keyProp] ===\n\t\t\t\t\tb.source.data[this.props.keyProp] &&\n\t\t\t\ta.target.data[this.props.keyProp] === b.target.data[this.props.keyProp]\n\t\t\t);\n\t\t}\n\n\t\tcalculateNewState(animationContext, interval) {\n\t\t\treturn {\n\t\t\t\tnodes: animationContext.nodes.map((n) =>\n\t\t\t\t\tthis.calculateNodePosition(n.base, n.old, n.new, interval)\n\t\t\t\t),\n\t\t\t\tlinks: animationContext.links.map((l) =>\n\t\t\t\t\tthis.calculateLinkPosition(l.base, l.old, l.new, interval)\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tcalculateNodePosition(node, start, end, interval) {\n\t\t\treturn {\n\t\t\t\t...node,\n\t\t\t\tx: this.calculateNewValue(start.x, end.x, interval),\n\t\t\t\ty: this.calculateNewValue(start.y, end.y, interval),\n\t\t\t};\n\t\t}\n\n\t\tcalculateLinkPosition(link, start, end, interval) {\n\t\t\treturn {\n\t\t\t\tsource: {\n\t\t\t\t\t...link.source,\n\t\t\t\t\tx: this.calculateNewValue(\n\t\t\t\t\t\tstart.source ? start.source.x : start.x,\n\t\t\t\t\t\tend.source ? end.source.x : end.x,\n\t\t\t\t\t\tinterval\n\t\t\t\t\t),\n\t\t\t\t\ty: this.calculateNewValue(\n\t\t\t\t\t\tstart.source ? start.source.y : start.y,\n\t\t\t\t\t\tend.source ? end.source.y : end.y,\n\t\t\t\t\t\tinterval\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\ttarget: {\n\t\t\t\t\t...link.target,\n\t\t\t\t\tx: this.calculateNewValue(\n\t\t\t\t\t\tstart.target ? start.target.x : start.x,\n\t\t\t\t\t\tend.target ? end.target.x : end.x,\n\t\t\t\t\t\tinterval\n\t\t\t\t\t),\n\t\t\t\t\ty: this.calculateNewValue(\n\t\t\t\t\t\tstart.target ? start.target.y : start.y,\n\t\t\t\t\t\tend.target ? end.target.y : end.y,\n\t\t\t\t\t\tinterval\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcalculateNewValue(start, end, interval) {\n\t\t\treturn start + (end - start) * this.props.easing(interval);\n\t\t}\n\n\t\trender() {\n\t\t\treturn /*#__PURE__*/ React.createElement(\n\t\t\t\tContainer,\n\t\t\t\t_extends({}, this.props, this.state)\n\t\t\t);\n\t\t}\n\t}\n\tAnimated.propTypes = propTypes$1;\n\n\tconst propTypes = {\n\t\tdata: PropTypes.object.isRequired,\n\t\tanimated: PropTypes.bool.isRequired,\n\t\tchildren: PropTypes.node,\n\t\tduration: PropTypes.number.isRequired,\n\t\teasing: PropTypes.func.isRequired,\n\t\tsteps: PropTypes.number.isRequired,\n\t\theight: PropTypes.number.isRequired,\n\t\twidth: PropTypes.number.isRequired,\n\t\tkeyProp: PropTypes.string.isRequired,\n\t\tlabelProp: PropTypes.string.isRequired,\n\t\tgetChildren: PropTypes.func.isRequired,\n\t\tmargins: PropTypes.shape({\n\t\t\tbottom: PropTypes.number.isRequired,\n\t\t\tleft: PropTypes.number.isRequired,\n\t\t\tright: PropTypes.number.isRequired,\n\t\t\ttop: PropTypes.number.isRequired,\n\t\t}).isRequired,\n\t\tpathFunc: PropTypes.func,\n\t\tnodeShape: PropTypes.oneOf(['circle', 'image', 'polygon', 'rect'])\n\t\t\t.isRequired,\n\t\tnodeProps: PropTypes.object.isRequired,\n\t\tgProps: PropTypes.object.isRequired,\n\t\tpathProps: PropTypes.object.isRequired,\n\t\tsvgProps: PropTypes.object.isRequired,\n\t\ttextProps: PropTypes.object.isRequired,\n\t};\n\tconst defaultProps = {\n\t\tanimated: false,\n\t\tduration: 500,\n\t\teasing: d3Ease.easeQuadOut,\n\t\tgetChildren: (n) => n.children,\n\t\tsteps: 20,\n\t\tkeyProp: 'name',\n\t\tlabelProp: 'name',\n\t\tmargins: {\n\t\t\tbottom: 10,\n\t\t\tleft: 20,\n\t\t\tright: 150,\n\t\t\ttop: 10,\n\t\t},\n\t\tnodeShape: 'circle',\n\t\tnodeProps: {},\n\t\tgProps: {},\n\t\tpathProps: {},\n\t\tsvgProps: {},\n\t\ttextProps: {},\n\t};\n\tclass Tree extends React.PureComponent {\n\t\trender() {\n\t\t\tconst contentWidth =\n\t\t\t\tthis.props.width - this.props.margins.left - this.props.margins.right;\n\t\t\tconst contentHeight =\n\t\t\t\tthis.props.height - this.props.margins.top - this.props.margins.bottom; // data is cloned because d3 will mutate the object passed in\n\n\t\t\tlet data = d3Hierarchy.hierarchy(\n\t\t\t\tclone(this.props.data),\n\t\t\t\tthis.props.getChildren\n\t\t\t);\n\t\t\tlet root = d3Hierarchy.tree().size([contentHeight, contentWidth])(data);\n\t\t\tlet nodes = root.descendants();\n\t\t\tlet links = root.links();\n\t\t\tnodes.forEach((node) => {\n\t\t\t\tnode.y += this.props.margins.top;\n\t\t\t});\n\t\t\treturn /*#__PURE__*/ React.createElement(\n\t\t\t\tAnimated,\n\t\t\t\t{\n\t\t\t\t\tanimated: this.props.animated,\n\t\t\t\t\tduration: this.props.duration,\n\t\t\t\t\teasing: this.props.easing,\n\t\t\t\t\tgetChildren: this.props.getChildren,\n\t\t\t\t\theight: this.props.height,\n\t\t\t\t\tkeyProp: this.props.keyProp,\n\t\t\t\t\tlabelProp: this.props.labelProp,\n\t\t\t\t\tlinks: links,\n\t\t\t\t\tnodes: nodes,\n\t\t\t\t\tnodeShape: this.props.nodeShape,\n\t\t\t\t\tnodeProps: this.props.nodeProps,\n\t\t\t\t\tpathFunc: this.props.pathFunc,\n\t\t\t\t\tsteps: this.props.steps,\n\t\t\t\t\twidth: this.props.width,\n\t\t\t\t\tgProps: {\n\t\t\t\t\t\tclassName: 'node',\n\t\t\t\t\t\t...this.props.gProps,\n\t\t\t\t\t},\n\t\t\t\t\tpathProps: {\n\t\t\t\t\t\tclassName: 'link',\n\t\t\t\t\t\t...this.props.pathProps,\n\t\t\t\t\t},\n\t\t\t\t\tsvgProps: this.props.svgProps,\n\t\t\t\t\ttextProps: this.props.textProps,\n\t\t\t\t},\n\t\t\t\tthis.props.children\n\t\t\t);\n\t\t}\n\t}\n\tTree.propTypes = propTypes;\n\tTree.defaultProps = defaultProps;\n\n\treturn Tree;\n});\n"]},"metadata":{},"sourceType":"script"}